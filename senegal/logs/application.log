2025-07-26 10:40:26 [main] INFO  c.sante.senegal.SenegalApplication - Starting SenegalApplication using Java 21.0.7 with PID 19240 (C:\Users\HP\Desktop\M2SIR\ProjetJEE\senegal\target\classes started by HP in C:\Users\HP\Desktop\M2SIR\ProjetJEE\senegal)
2025-07-26 10:40:26 [main] DEBUG c.sante.senegal.SenegalApplication - Running with Spring Boot v3.2.5, Spring v6.1.6
2025-07-26 10:40:26 [main] INFO  c.sante.senegal.SenegalApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-26 10:40:26 [main] DEBUG o.s.boot.SpringApplication - Loading source class com.sante.senegal.SenegalApplication
2025-07-26 10:40:26 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68d279ec
2025-07-26 10:40:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-26 10:40:29 [main] DEBUG o.s.b.a.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.sante.senegal'. Automatic @Repository and @Entity scanning is enabled.
2025-07-26 10:40:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 402 ms. Found 20 JPA repository interfaces.
2025-07-26 10:40:31 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\HP\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2025-07-26 10:40:31 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\HP\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar
2025-07-26 10:40:31 [main] DEBUG o.s.b.w.e.t.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-07-26 10:40:31 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-07-26 10:40:31 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-26 10:40:31 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.20]
2025-07-26 10:40:31 [main] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-07-26 10:40:31 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-07-26 10:40:31 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4936 ms
2025-07-26 10:40:31 [main] DEBUG o.s.b.w.s.ServletContextInitializerBeans - Mapping filters: springSecurityFilterChain urls=[/*] order=-100, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, jwtFilter urls=[/*] order=2147483647
2025-07-26 10:40:31 [main] DEBUG o.s.b.w.s.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/]
2025-07-26 10:40:31 [main] DEBUG o.s.b.w.s.f.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2025-07-26 10:40:31 [main] DEBUG o.s.b.w.s.f.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2025-07-26 10:40:31 [main] DEBUG o.s.b.w.s.DelegatingFilterProxyRegistrationBean$1 - Filter 'springSecurityFilterChain' configured for use
2025-07-26 10:40:31 [main] DEBUG o.s.b.w.s.f.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2025-07-26 10:40:31 [main] DEBUG com.sante.senegal.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-07-26 10:40:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-26 10:40:32 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6c07ad6b
2025-07-26 10:40:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-26 10:40:32 [main] INFO  o.f.c.i.license.VersionPrinter - Flyway Community Edition 9.22.3 by Redgate
2025-07-26 10:40:32 [main] INFO  o.f.c.i.license.VersionPrinter - See release notes here: https://rd.gt/416ObMi
2025-07-26 10:40:32 [main] INFO  o.f.c.i.license.VersionPrinter - 
2025-07-26 10:40:32 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5432/sante_senegal_db (PostgreSQL 16.9)
2025-07-26 10:40:32 [main] WARN  o.f.c.i.database.base.Database - Flyway upgrade recommended: PostgreSQL 16.9 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-07-26 10:40:32 [main] INFO  o.f.core.internal.command.DbValidate - Successfully validated 0 migrations (execution time 00:00.039s)
2025-07-26 10:40:32 [main] WARN  o.f.core.internal.command.DbValidate - No migrations found. Are your locations set up correctly?
2025-07-26 10:40:32 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": << Empty Schema >>
2025-07-26 10:40:32 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-07-26 10:40:33 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-26 10:40:33 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-07-26 10:40:33 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-26 10:40:34 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-26 10:40:34 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-26 10:40:37 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-26 10:40:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-26 10:40:38 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-26 10:40:42 [main] INFO  c.s.s.s.i.FileStorageServiceImpl - Répertoire de stockage initialisé : C:\Users\HP\Desktop\M2SIR\ProjetJEE\senegal\uploads\documents
2025-07-26 10:40:43 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-26 10:40:44 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 186 mappings in 'requestMappingHandlerMapping'
2025-07-26 10:40:44 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-26 10:40:44 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@481bd693, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6179761f, org.springframework.security.web.context.SecurityContextHolderFilter@7a8bda44, org.springframework.security.web.header.HeaderWriterFilter@24690d1c, org.springframework.web.filter.CorsFilter@684968be, org.springframework.security.web.authentication.logout.LogoutFilter@7a8a2cd8, com.sante.senegal.config.JwtFilter@5a090f62, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f559822, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6eb5694b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@63bcd099, org.springframework.security.web.session.SessionManagementFilter@44695eb9, org.springframework.security.web.access.ExceptionTranslationFilter@1708f10b, org.springframework.security.web.access.intercept.AuthorizationFilter@499c0aed]
2025-07-26 10:40:44 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-26 10:40:44 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-26 10:40:44 [main] DEBUG o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2025-07-26 10:40:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path '/api/v1'
2025-07-26 10:40:45 [main] DEBUG o.s.b.a.l.ConditionEvaluationReportLogger - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FlywayAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.flywaydb.core.Flyway' (OnClassCondition)
      - @ConditionalOnProperty (spring.flyway.enabled) matched (OnPropertyCondition)
      - AnyNestedCondition 2 matched 1 did not; NestedCondition on FlywayAutoConfiguration.FlywayDataSourceCondition.FlywayUrlCondition @ConditionalOnProperty (spring.flyway.url) did not find property 'url'; NestedCondition on FlywayAutoConfiguration.FlywayDataSourceCondition.JdbcConnectionDetailsCondition @ConditionalOnBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) found bean 'jdbcConnectionDetails'; NestedCondition on FlywayAutoConfiguration.FlywayDataSourceCondition.DataSourceBeanCondition @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (FlywayAutoConfiguration.FlywayDataSourceCondition)

   FlywayAutoConfiguration.FlywayConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.support.JdbcUtils' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.flywaydb.core.Flyway; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FlywayAutoConfiguration.FlywayConfiguration#flywayConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.flyway.FlywayConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FlywayAutoConfiguration.FlywayConfiguration#flywayInitializer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FlywayAutoConfiguration.FlywayConfiguration#postgresqlFlywayConfigurationCustomizer matched:
      - @ConditionalOnClass found required class 'org.flywaydb.core.internal.database.postgresql.PostgreSQLConfigurationExtension' (OnClassCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MailSenderAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.mail.internet.MimeMessage', 'jakarta.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) matched (MailSenderAutoConfiguration.MailSenderCondition)
      - @ConditionalOnMissingBean (types: org.springframework.mail.MailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MailSenderPropertiesConfiguration matched:
      - @ConditionalOnProperty (spring.mail.host) matched (OnPropertyCondition)

   MailSenderPropertiesConfiguration#mailSender matched:
      - @ConditionalOnMissingBean (types: org.springframework.mail.javamail.JavaMailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   OAuth2ClientAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity', 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   OAuth2ClientRegistrationRepositoryConfiguration matched:
      - OAuth2 Clients Configured Condition found registered clients ${GOOGLE_CLIENT_ID} (ClientsConfiguredCondition)

   OAuth2ClientRegistrationRepositoryConfiguration#clientRegistrationRepository matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.registration.ClientRegistrationRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2WebSecurityConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.security.oauth2.client.registration.ClientRegistrationRepository; SearchStrategy: all) found bean 'clientRegistrationRepository' (OnBeanCondition)

   OAuth2WebSecurityConfiguration#authorizedClientRepository matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2WebSecurityConfiguration#authorizedClientService matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.OAuth2AuthorizedClientService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfigProperties matched:
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)

   SpringDocConfiguration#fileSupportConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.FileSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#openAPIBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.OpenAPIService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#operationBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.OperationService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#parameterBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.GenericParameterService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#polymorphicModelConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.polymorphic-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.PolymorphicModelConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#requestBodyBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.RequestBodyService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#responseSupportConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.ResponseSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#schemaPropertyDeprecatingConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.deprecating-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.SchemaPropertyDeprecatingConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#securityParser matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.SecurityService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springDocCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.SpringDocCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springDocProviders matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringDocProviders; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springdocObjectMapperProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.ObjectMapperProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.QuerydslProvider matched:
      - @ConditionalOnClass found required class 'org.springframework.data.querydsl.binding.QuerydslBindingsFactory' (OnClassCondition)

   SpringDocConfiguration.QuerydslProvider#queryDslQuerydslPredicateOperationCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties' (OnClassCondition)

   SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider#springDataWebPropertiesProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringDataWebPropertiesProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.WebConversionServiceConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.web.format.WebConversionService' (OnClassCondition)

   SpringDocPageableConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.domain.Pageable' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocPageableConfiguration#delegatingMethodParameterCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.DelegatingMethodParameterCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocPageableConfiguration#pageableOpenAPIConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.pageable-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.PageableOpenAPIConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocSecurityConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.SecurityFilterChain' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnExpression (#{${springdoc.api-docs.enabled:true} and ${springdoc.enable-spring-security:true}}) resulted in true (OnExpressionCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocSecurityConfiguration.SpringSecurityLoginEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.Filter' (OnClassCondition)

   SpringDocSortConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.domain.Sort' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocSortConfiguration#sortOpenAPIConverter matched:
      - @ConditionalOnProperty (springdoc.sort-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.SortOpenAPIConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocUIConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocWebMvcConfiguration#openApiResource matched:
      - @ConditionalOnExpression (#{(${springdoc.use-management-port:false} == false ) and ${springdoc.enable-default-api-docs:true}}) resulted in true (OnExpressionCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.api.OpenApiWebMvcResource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#requestBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.core.service.RequestService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#responseBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.GenericResponseService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#springWebProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.function.RouterFunction' (OnClassCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration#routerFunctionProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SwaggerConfig#indexPageTransformer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerIndexTransformer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerConfigResource matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerConfigResource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerResourceResolver matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerResourceResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerWebMvcConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerWelcome matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerUiConfigParameters matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SwaggerUiConfigProperties matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SwaggerUiOAuthProperties matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'; @ConditionalOnMissingBean (types: org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration#taskScheduler matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration.FlywayConfiguration#oracleFlywayConfigurationCustomizer:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.database.oracle.OracleConfigurationExtension' (OnClassCondition)

   FlywayAutoConfiguration.FlywayConfiguration#sqlServerFlywayConfigurationCustomizer:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.database.sqlserver.SQLServerConfigurationExtension' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderJndiConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'jakarta.mail.Session' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MultipartAutoConfiguration#multipartConfigElement:
      Did not match:
         - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) found beans of type 'jakarta.servlet.MultipartConfigElement' multipartConfigElement (OnBeanCondition)

   MultipleOpenApiSupportConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort @ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.models.GroupedOpenApi (MultipleOpenApiSupportCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)

   MultipleOpenApiSupportConfiguration.SpringDocWebMvcActuatorDifferentConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)
         - Ancestor org.springdoc.webmvc.core.configuration.MultipleOpenApiSupportConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   OAuth2WebSecurityConfiguration.OAuth2SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' securityFilterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 3 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.PasswordConfigured @ConditionalOnProperty (spring.security.user.password) did not find property 'password'; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.NameConfigured @ConditionalOnProperty (spring.security.user.name) did not find property 'name'; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.MissingAlternative @ConditionalOnMissingClass found unwanted class 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository' (ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' securityFilterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   SpringDocConfiguration#propertiesResolverForSchema:
      Did not match:
         - @ConditionalOnProperty (springdoc.api-docs.resolve-schema-properties) did not find property 'springdoc.api-docs.resolve-schema-properties' (OnPropertyCondition)

   SpringDocConfiguration#propertyCustomizingConverter:
      Did not match:
         - @ConditionalOnBean (types: org.springdoc.core.customizers.PropertyCustomizer; SearchStrategy: all) did not find any beans of type org.springdoc.core.customizers.PropertyCustomizer (OnBeanCondition)

   SpringDocConfiguration#springdocBeanFactoryPostProcessor:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on CacheOrGroupedOpenApiCondition.OnCacheDisabled found non-matching nested conditions @ConditionalOnProperty (springdoc.cache.disabled) did not find property 'springdoc.cache.disabled'; NestedCondition on CacheOrGroupedOpenApiCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort @ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.models.GroupedOpenApi (CacheOrGroupedOpenApiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.boot.context.properties.bind.BindResult' (OnClassCondition)

   SpringDocConfiguration#springdocBeanFactoryPostProcessor2:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.boot.context.properties.bind.BindResult' (OnClassCondition)

   SpringDocConfiguration.SpringDocActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' (OnClassCondition)

   SpringDocConfiguration.SpringDocRepositoryRestConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration' (OnClassCondition)

   SpringDocConfiguration.SpringDocWebFluxSupportConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   SpringDocDataRestConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration' (OnClassCondition)

   SpringDocFunctionCatalogConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.function.web.function.FunctionEndpointInitializer' (OnClassCondition)

   SpringDocGroovyConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.lang.MetaClass' (OnClassCondition)

   SpringDocHateoasConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.server.LinkRelationProvider' (OnClassCondition)

   SpringDocJacksonKotlinModuleConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.module.kotlin.KotlinModule' (OnClassCondition)

   SpringDocJavadocConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.therapi.runtimejavadoc.CommentFormatter' (OnClassCondition)

   SpringDocKotlinConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'kotlin.coroutines.Continuation' (OnClassCondition)

   SpringDocKotlinxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'kotlinx.coroutines.flow.Flow' (OnClassCondition)

   SpringDocSecurityConfiguration.SpringDocSecurityOAuth2Configuration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationService' (OnClassCondition)

   SpringDocSecurityConfiguration.SpringSecurityLoginEndpointConfiguration#springSecurityLoginEndpointCustomiser:
      Did not match:
         - @ConditionalOnProperty (springdoc.show-login-endpoint) did not find property 'springdoc.show-login-endpoint' (OnPropertyCondition)

   SpringDocSortConfiguration#delegatingMethodParameterCustomizer:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.DelegatingMethodParameterCustomizer; SearchStrategy: all) found beans of type 'org.springdoc.core.customizers.DelegatingMethodParameterCustomizer' delegatingMethodParameterCustomizer (OnBeanCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)

   SwaggerConfig#springWebProvider:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) found beans of type 'org.springdoc.core.providers.SpringWebProvider' springWebProvider (OnBeanCondition)

   SwaggerConfig#swaggerUiConfigParameters:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.properties.SwaggerUiConfigParameters; SearchStrategy: all) found beans of type 'org.springdoc.core.properties.SwaggerUiConfigParameters' org.springdoc.core.properties.SwaggerUiConfigParameters (OnBeanCondition)

   SwaggerConfig#swaggerUiHome:
      Did not match:
         - @ConditionalOnProperty (springdoc.swagger-ui.use-root-path=true) did not find property 'springdoc.swagger-ui.use-root-path' (OnPropertyCondition)

   SwaggerConfig.SwaggerActuatorWelcomeConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration#taskSchedulerVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 3 did not; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.PasswordConfigured @ConditionalOnProperty (spring.security.user.password) did not find property 'password'; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.NameConfigured @ConditionalOnProperty (spring.security.user.name) did not find property 'name'; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.MissingAlternative @ConditionalOnMissingClass found unwanted class 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository' (UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springdoc.core.configuration.SpringDocSpecPropertiesConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2025-07-26 10:40:45 [main] INFO  c.sante.senegal.SenegalApplication - Started SenegalApplication in 19.957 seconds (process running for 22.301)
2025-07-26 10:40:45 [main] DEBUG o.s.b.a.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT
2025-07-26 10:40:45 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        utilisateurs u1_0
2025-07-26 10:40:45 [main] INFO  c.s.s.config.CalendrierHealthCheck - Vérification de la connectivité avec Date Nager API...
2025-07-26 10:40:45 [main] DEBUG o.s.web.client.RestTemplate - HTTP GET https://date.nager.at/api/v3/CountryInfo/SN
2025-07-26 10:40:45 [main] DEBUG o.s.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-07-26 10:40:45 [main] DEBUG c.s.s.config.LoggingInterceptor - Appel API: GET https://date.nager.at/api/v3/CountryInfo/SN
2025-07-26 10:40:54 [main] DEBUG c.s.s.config.LoggingInterceptor - Réponse API: 200 OK - 9259 ms
2025-07-26 10:40:54 [main] DEBUG o.s.web.client.RestTemplate - Response 200 OK
2025-07-26 10:40:55 [main] DEBUG o.s.web.client.RestTemplate - Reading to [com.sante.senegal.dto.DateNagerCountryInfo]
2025-07-26 10:40:55 [main] INFO  c.s.s.c.DateNagerCalendrierService - Test de connectivité réussi. Pays: Republic of Senegal
2025-07-26 10:40:55 [main] INFO  c.s.s.config.CalendrierHealthCheck - ✅ Connectivité Date Nager API: OK
2025-07-26 10:40:55 [main] DEBUG o.s.b.a.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2025-07-26 10:41:05 [http-nio-8081-exec-2] INFO  o.a.c.c.C.[.[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-26 10:41:05 [http-nio-8081-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-26 10:41:05 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-26 10:41:05 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-26 10:41:05 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-26 10:41:05 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3453e1f
2025-07-26 10:41:05 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@58b9cfb7
2025-07-26 10:41:05 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-26 10:41:05 [http-nio-8081-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-07-26 10:41:05 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:05 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:05 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 10:41:05 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 10:41:05 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:41:05 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:41:05 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 10:41:05 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:41:05 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:41:05 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 10:41:05 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:05 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 10:41:05 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T10:41:04
2025-07-26 10:41:05 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:41:05 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:41:05 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:41:05 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:41:05 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:41:05 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:05 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:05 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:05 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:05 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:05 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:05 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:05 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:05 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:05 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:05 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:05 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:05 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:05 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:05 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:05 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:41:05 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:41:06 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:41:06 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:41:06 [http-nio-8081-exec-5] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:41:06 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:41:06 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 10:41:06 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:41:06 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 10:41:06 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:41:06 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:41:06 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:41:06 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:06 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:06 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:41:06 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:41:06 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:41:06 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:41:06 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:06 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:06 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 10:41:06 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:41:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:41:06 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:41:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T10:41:04
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T10:41:04
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T10:41:04", parameters={masked}
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:41:06 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:06 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:41:06 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:06 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:06 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:06 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:06 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:33 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-07-26 10:41:33 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-07-26 10:41:33 [http-nio-8081-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-26 10:41:33 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-07-26 10:41:33 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-07-26 10:41:33 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AuthController#login(LoginRequestDto)
2025-07-26 10:41:33 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequestDto(email=admin@example.com, motDePasse=Admin123)]
2025-07-26 10:41:33 [http-nio-8081-exec-6] INFO  c.s.s.s.i.AuthServiceImpl - Tentative de connexion pour email: admin@example.com
2025-07-26 10:41:33 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:35 [http-nio-8081-exec-6] INFO  c.s.s.s.i.AuthServiceImpl - Connexion réussie pour utilisateur: admin@example.com (type: ADMIN)
2025-07-26 10:41:35 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:35 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponseDto(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBleGFtcGxlLmNvbSIsInJvbGUiOiJBRE1JTiIsI (truncated)...]
2025-07-26 10:41:35 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:35 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 10:41:35 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 10:41:35 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:41:35 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:35 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:35 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:41:35 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 10:41:35 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 10:41:35 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:41:35 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:41:35 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:41:35 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T10:41:35
2025-07-26 10:41:35 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:35 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 10:41:35 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:35 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:41:35 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:35 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:41:35 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:35 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:35 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:35 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:35 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:41:35 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 10:41:35 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:41:35 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 10:41:35 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:41:35 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:41:35 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:41:35 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:41:35 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:41:35 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:41:35 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:35 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:35 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:35 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:41:35 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:35 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:41:35 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:35 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:35 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:35 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:35 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:41:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:41:35 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:41:35 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:41:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:35 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:35 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:41:36 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:41:36 [http-nio-8081-exec-6] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:41:36 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:36 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:41:36 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:41:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:41:36 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:41:36 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:41:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:41:36 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:41:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:41:36 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:36 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:41:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:41:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:41:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:36 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:41:36 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:41:36 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T10:41:35
2025-07-26 10:41:36 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:41:36 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:41:36 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:41:36 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:41:36 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:36 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:41:36 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:41:36 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:41:36 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:41:36 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:36 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T10:41:35
2025-07-26 10:41:36 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T10:41:35", parameters={masked}
2025-07-26 10:41:36 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 10:41:36 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 10:41:36 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:36 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 10:41:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:41:36 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 10:41:36 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 10:41:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 10:41:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 10:41:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:36 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:41:36 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:36 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:36 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:41:36 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:42:49 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /profil/3
2025-07-26 10:42:49 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /profil/3
2025-07-26 10:42:49 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:42:49 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:42:49 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /profil/3
2025-07-26 10:42:49 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/profil/3", parameters={}
2025-07-26 10:42:49 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ProfilController#getProfil(Long)
2025-07-26 10:42:49 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_1.id is not null 
                then 5 
            when u1_2.id is not null 
                then 1 
            when u1_3.id is not null 
                then 2 
            when u1_4.id is not null 
                then 3 
            when u1_5.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_2.permissions,
            u1_2.role,
            u1_3.biographie,
            u1_3.carte_ordre_path,
            u1_3.cv_path,
            u1_3.diplome_path,
            u1_3.experience,
            u1_3.matricule,
            u1_3.numero_ordre,
            u1_3.service_id,
            u1_3.specialite,
            u1_3.titre,
            u1_4.allergies,
            u1_4.contact_urgence_nom,
            u1_4.contact_urgence_telephone,
            dm1_0.id_dossier,
            dm1_0.antecedents_familiaux,
            dm1_0.antecedents_medicaux,
            dm1_0.date_creation,
            dm1_0.date_modification,
            dm1_0.notes_generales,
            dm1_0.id_patient,
            dm1_0.statut,
            dm1_0.vaccinations,
            u1_4.groupe_sanguin,
            u1_4.num_assurance,
            u1_4.preferences_notification,
            u1_4.profession,
            u1_5.id_hopital,
            u1_5.poste,
            u1_5.id_service,
            u1_3.id,
            u1_4.id 
        from
            utilisateurs u1_0 
        left join
            receptionniste u1_1 
                on u1_0.id=u1_1.id 
        left join
            administrateurs u1_2 
                on u1_0.id=u1_2.id 
        left join
            medecins u1_3 
                on u1_0.id=u1_3.id 
        left join
            patients u1_4 
                on u1_0.id=u1_4.id 
        left join
            personnel_medical u1_5 
                on u1_0.id=u1_5.id 
        left join
            dossiers_medicaux dm1_0 
                on u1_4.id=dm1_0.id_patient 
        where
            u1_0.id=?
2025-07-26 10:42:49 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.sante.senegal.exceptions.GlobalExceptionHandler#handleGeneralException(Exception)
2025-07-26 10:42:49 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:42:49 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ErrorResponse(code=INTERNAL_ERROR, message=Une erreur interne s'est produite, timestamp=2025-07-26T1 (truncated)...]
2025-07-26 10:42:49 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.util.NoSuchElementException: No value present]
2025-07-26 10:42:49 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-26 10:43:28 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 10:43:28 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 10:43:28 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:43:28 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:43:28 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:43:28 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:43:28 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 10:43:28 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 10:43:28 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:43:28 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:43:28 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:43:28 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 10:43:28 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:43:28 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:43:28 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T10:43:28
2025-07-26 10:43:28 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:43:28 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:28 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:28 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:43:28 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:43:28 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:43:28 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:43:28 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:43:28 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:43:28 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:43:28 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:28 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:43:28 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:28 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:43:29 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:43:29 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:43:29 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:43:29 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:43:29 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:43:29 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:29 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:43:29 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:43:29 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:43:29 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:43:29 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:43:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:43:29 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:43:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:43:29 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:43:29 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:43:29 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:43:29 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:43:29 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:43:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:43:29 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:43:29 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:29 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:43:29 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:43:29 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:43:29 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:43:29 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:29 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:43:29 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:29 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T10:43:28
2025-07-26 10:43:29 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T10:43:28
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T10:43:28", parameters={masked}
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:29 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:29 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:55 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AuthController#login(LoginRequestDto)
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequestDto(email=moussa.fall@hopital.sn, motDePasse=medecin123)]
2025-07-26 10:43:55 [http-nio-8081-exec-9] INFO  c.s.s.s.i.AuthServiceImpl - Tentative de connexion pour email: moussa.fall@hopital.sn
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:55 [http-nio-8081-exec-9] INFO  c.s.s.s.i.AuthServiceImpl - Connexion réussie pour utilisateur: moussa.fall@hopital.sn (type: MEDECIN)
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponseDto(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJtb3Vzc2EuZmFsbEBob3BpdGFsLnNuIiwicm9sZSI6Ik1FR (truncated)...]
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:55 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:43:55 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /examens/urgents
2025-07-26 10:43:55 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /examens/en-attente
2025-07-26 10:43:55 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:43:55 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:43:55 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:43:55 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /examens/urgents
2025-07-26 10:43:55 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /examens/en-attente
2025-07-26 10:43:55 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:55 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:55 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:55 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:55 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:43:55 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:55 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:55 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:55 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:43:55 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /examens/urgents
2025-07-26 10:43:55 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/examens/urgents", parameters={}
2025-07-26 10:43:55 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ExamenController#getExamensUrgents()
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26", parameters={masked}
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getStatistiquesConsultationsMedecin(Long, LocalDate, LocalDate)
2025-07-26 10:43:55 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:43:55 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /examens/en-attente
2025-07-26 10:43:55 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/examens/en-attente", parameters={}
2025-07-26 10:43:55 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ExamenController#getExamensEnAttente()
2025-07-26 10:43:55 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:43:55 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        e1_0.id_examen,
        e1_0.id_consultation,
        e1_0.date_prescription,
        e1_0.date_realisation,
        e1_0.description,
        e1_0.interpretation,
        e1_0.nom_examen,
        e1_0.resultats,
        e1_0.statut,
        e1_0.type_examen,
        e1_0.urgence 
    from
        examens e1_0 
    where
        e1_0.urgence in (?, ?) 
        and e1_0.statut<>?
2025-07-26 10:43:55 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:43:55 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:43:55 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        e1_0.id_examen,
        e1_0.id_consultation,
        e1_0.date_prescription,
        e1_0.date_realisation,
        e1_0.description,
        e1_0.interpretation,
        e1_0.nom_examen,
        e1_0.resultats,
        e1_0.statut,
        e1_0.type_examen,
        e1_0.urgence 
    from
        examens e1_0 
    where
        e1_0.statut in (?, ?)
2025-07-26 10:43:55 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:43:55 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:43:55 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:43:55 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:43:55 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:43:56 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:56 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:56 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:56 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:56 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:56 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:56 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:56 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:56 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:43:56 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:56 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:56 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:43:56 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:43:56 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{totalConsultations=0, consultationsTerminees=0, dureeMovenne=0.0}]
2025-07-26 10:43:56 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:06 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /examens/en-attente
2025-07-26 10:44:06 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:44:06 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:44:06 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /examens/urgents
2025-07-26 10:44:06 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:44:06 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:44:06 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:44:06 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /examens/urgents
2025-07-26 10:44:06 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /examens/en-attente
2025-07-26 10:44:06 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:44:06 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:06 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:06 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:06 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:06 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:06 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:06 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:44:06 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:44:06 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:44:06 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:44:06 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /examens/urgents
2025-07-26 10:44:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/examens/urgents", parameters={}
2025-07-26 10:44:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ExamenController#getExamensUrgents()
2025-07-26 10:44:06 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:06 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:06 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:06 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:06 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        e1_0.id_examen,
        e1_0.id_consultation,
        e1_0.date_prescription,
        e1_0.date_realisation,
        e1_0.description,
        e1_0.interpretation,
        e1_0.nom_examen,
        e1_0.resultats,
        e1_0.statut,
        e1_0.type_examen,
        e1_0.urgence 
    from
        examens e1_0 
    where
        e1_0.urgence in (?, ?) 
        and e1_0.statut<>?
2025-07-26 10:44:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:06 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:44:06 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:44:06 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:44:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:06 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:44:06 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:06 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:06 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:06 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:06 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /examens/en-attente
2025-07-26 10:44:06 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/examens/en-attente", parameters={}
2025-07-26 10:44:06 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ExamenController#getExamensEnAttente()
2025-07-26 10:44:06 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        e1_0.id_examen,
        e1_0.id_consultation,
        e1_0.date_prescription,
        e1_0.date_realisation,
        e1_0.description,
        e1_0.interpretation,
        e1_0.nom_examen,
        e1_0.resultats,
        e1_0.statut,
        e1_0.type_examen,
        e1_0.urgence 
    from
        examens e1_0 
    where
        e1_0.statut in (?, ?)
2025-07-26 10:44:06 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:06 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:06 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:06 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:06 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:06 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:44:06 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26", parameters={masked}
2025-07-26 10:44:06 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getStatistiquesConsultationsMedecin(Long, LocalDate, LocalDate)
2025-07-26 10:44:06 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:44:06 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:06 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{totalConsultations=0, consultationsTerminees=0, dureeMovenne=0.0}]
2025-07-26 10:44:06 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:10 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:44:10 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:44:10 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:10 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:10 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /examens/en-attente
2025-07-26 10:44:10 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:44:10 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:44:10 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:44:10 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:10 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:44:10 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:10 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:10 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:10 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:10 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:10 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:10 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:44:10 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:44:10 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:44:10 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:44:10 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /examens/en-attente
2025-07-26 10:44:10 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/examens/en-attente", parameters={}
2025-07-26 10:44:10 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ExamenController#getExamensEnAttente()
2025-07-26 10:44:10 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:10 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:10 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:10 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        e1_0.id_examen,
        e1_0.id_consultation,
        e1_0.date_prescription,
        e1_0.date_realisation,
        e1_0.description,
        e1_0.interpretation,
        e1_0.nom_examen,
        e1_0.resultats,
        e1_0.statut,
        e1_0.type_examen,
        e1_0.urgence 
    from
        examens e1_0 
    where
        e1_0.statut in (?, ?)
2025-07-26 10:44:10 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:10 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:10 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:10 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /examens/urgents
2025-07-26 10:44:10 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:44:10 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:10 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:10 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:44:10 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26", parameters={masked}
2025-07-26 10:44:10 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getStatistiquesConsultationsMedecin(Long, LocalDate, LocalDate)
2025-07-26 10:44:10 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:44:10 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:10 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:10 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{totalConsultations=0, consultationsTerminees=0, dureeMovenne=0.0}]
2025-07-26 10:44:10 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:10 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:10 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /examens/urgents
2025-07-26 10:44:10 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/examens/urgents", parameters={}
2025-07-26 10:44:10 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ExamenController#getExamensUrgents()
2025-07-26 10:44:10 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        e1_0.id_examen,
        e1_0.id_consultation,
        e1_0.date_prescription,
        e1_0.date_realisation,
        e1_0.description,
        e1_0.interpretation,
        e1_0.nom_examen,
        e1_0.resultats,
        e1_0.statut,
        e1_0.type_examen,
        e1_0.urgence 
    from
        examens e1_0 
    where
        e1_0.urgence in (?, ?) 
        and e1_0.statut<>?
2025-07-26 10:44:10 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:10 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:10 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:17 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /medecin/1
2025-07-26 10:44:17 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /patient/all
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /patient/all
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:17 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/medecin/1
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /patient/all
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/patient/all", parameters={}
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PatientController#getPatients()
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_1.adresse,
        p1_1.date_creation,
        p1_1.date_derniere_connexion,
        p1_1.date_modification,
        p1_1.date_naissance,
        p1_1.email,
        p1_1.lieu_naissance,
        p1_1.mot_de_passe,
        p1_1.nom,
        p1_1.prenom,
        p1_1.sexe,
        p1_1.statut,
        p1_1.telephone,
        p1_1.type,
        p1_0.allergies,
        p1_0.contact_urgence_nom,
        p1_0.contact_urgence_telephone,
        p1_0.groupe_sanguin,
        p1_0.num_assurance,
        p1_0.preferences_notification,
        p1_0.profession 
    from
        patients p1_0 
    join
        utilisateurs p1_1 
            on p1_0.id=p1_1.id
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:44:17 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /medecin/1
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.sante.senegal.exceptions.GlobalExceptionHandler#handleGeneralException(Exception)
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ErrorResponse(code=INTERNAL_ERROR, message=Une erreur interne s'est produite, timestamp=2025-07-26T1 (truncated)...]
2025-07-26 10:44:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.modelmapper.MappingException: ModelMapper mapping errors:<EOL><EOL><EOL><EOL>1) Failed to instantiate instance of destination com.sante.senegal.dto.PatientDto. Ensure that com.sante.senegal.dto.PatientDto has a non-private no-argument constructor.<EOL><EOL><EOL><EOL>1 error]
2025-07-26 10:44:17 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-26 10:44:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:17 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /medecin/1
2025-07-26 10:44:17 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/medecin/1", parameters={}
2025-07-26 10:44:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.MedecinController#getMedecinById(Long)
2025-07-26 10:44:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:44:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.sante.senegal.exceptions.GlobalExceptionHandler#handleGeneralException(Exception)
2025-07-26 10:44:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ErrorResponse(code=INTERNAL_ERROR, message=Une erreur interne s'est produite, timestamp=2025-07-26T1 (truncated)...]
2025-07-26 10:44:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.modelmapper.MappingException: ModelMapper mapping errors:<EOL><EOL><EOL><EOL>1) Failed to instantiate instance of destination com.sante.senegal.dto.MedecinDto. Ensure that com.sante.senegal.dto.MedecinDto has a non-private no-argument constructor.<EOL><EOL><EOL><EOL>1 error]
2025-07-26 10:44:17 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-26 10:44:17 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/medecin/1
2025-07-26 10:44:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:17 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/medecin/1
2025-07-26 10:44:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/medecin/1", parameters={}
2025-07-26 10:44:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getByMedecin(Long)
2025-07-26 10:44:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=?
2025-07-26 10:44:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:44:48 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /examens/en-attente
2025-07-26 10:44:48 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /examens/urgents
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:44:48 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:44:48 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:48 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /examens/en-attente
2025-07-26 10:44:48 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:48 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:44:48 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:44:48 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:48 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:44:48 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:48 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:48 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:48 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:44:48 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:48 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:48 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /examens/en-attente
2025-07-26 10:44:48 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/examens/en-attente", parameters={}
2025-07-26 10:44:48 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ExamenController#getExamensEnAttente()
2025-07-26 10:44:48 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        e1_0.id_examen,
        e1_0.id_consultation,
        e1_0.date_prescription,
        e1_0.date_realisation,
        e1_0.description,
        e1_0.interpretation,
        e1_0.nom_examen,
        e1_0.resultats,
        e1_0.statut,
        e1_0.type_examen,
        e1_0.urgence 
    from
        examens e1_0 
    where
        e1_0.statut in (?, ?)
2025-07-26 10:44:48 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:48 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:48 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:48 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /examens/urgents
2025-07-26 10:44:48 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:44:48 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:48 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:48 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:48 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:48 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /examens/urgents
2025-07-26 10:44:48 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/examens/urgents", parameters={}
2025-07-26 10:44:48 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ExamenController#getExamensUrgents()
2025-07-26 10:44:48 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        e1_0.id_examen,
        e1_0.id_consultation,
        e1_0.date_prescription,
        e1_0.date_realisation,
        e1_0.description,
        e1_0.interpretation,
        e1_0.nom_examen,
        e1_0.resultats,
        e1_0.statut,
        e1_0.type_examen,
        e1_0.urgence 
    from
        examens e1_0 
    where
        e1_0.urgence in (?, ?) 
        and e1_0.statut<>?
2025-07-26 10:44:48 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:44:48 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26", parameters={masked}
2025-07-26 10:44:48 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getStatistiquesConsultationsMedecin(Long, LocalDate, LocalDate)
2025-07-26 10:44:48 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:48 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:48 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:48 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:44:48 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:48 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{totalConsultations=0, consultationsTerminees=0, dureeMovenne=0.0}]
2025-07-26 10:44:48 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:53 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:44:53 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:44:53 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:53 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:53 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:53 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /examens/en-attente
2025-07-26 10:44:53 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:53 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:44:53 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:44:53 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:44:53 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:44:53 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:53 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:53 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:53 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:53 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:44:53 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:44:53 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:44:53 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:53 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:44:53 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:53 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:53 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:53 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /examens/en-attente
2025-07-26 10:44:53 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/examens/en-attente", parameters={}
2025-07-26 10:44:53 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ExamenController#getExamensEnAttente()
2025-07-26 10:44:53 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /examens/urgents
2025-07-26 10:44:53 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        e1_0.id_examen,
        e1_0.id_consultation,
        e1_0.date_prescription,
        e1_0.date_realisation,
        e1_0.description,
        e1_0.interpretation,
        e1_0.nom_examen,
        e1_0.resultats,
        e1_0.statut,
        e1_0.type_examen,
        e1_0.urgence 
    from
        examens e1_0 
    where
        e1_0.statut in (?, ?)
2025-07-26 10:44:53 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:53 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:53 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:44:53 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:53 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:53 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:53 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:53 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:53 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26
2025-07-26 10:44:53 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/consultations/medecin/1?dateDebut=2025-07-01&dateFin=2025-07-26", parameters={masked}
2025-07-26 10:44:53 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getStatistiquesConsultationsMedecin(Long, LocalDate, LocalDate)
2025-07-26 10:44:53 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:44:53 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /examens/urgents
2025-07-26 10:44:53 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/examens/urgents", parameters={}
2025-07-26 10:44:53 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ExamenController#getExamensUrgents()
2025-07-26 10:44:53 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:53 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{totalConsultations=0, consultationsTerminees=0, dureeMovenne=0.0}]
2025-07-26 10:44:53 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        e1_0.id_examen,
        e1_0.id_consultation,
        e1_0.date_prescription,
        e1_0.date_realisation,
        e1_0.description,
        e1_0.interpretation,
        e1_0.nom_examen,
        e1_0.resultats,
        e1_0.statut,
        e1_0.type_examen,
        e1_0.urgence 
    from
        examens e1_0 
    where
        e1_0.urgence in (?, ?) 
        and e1_0.statut<>?
2025-07-26 10:44:53 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:53 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:53 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:44:53 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:44:56 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /profil/1
2025-07-26 10:44:56 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /profil/1
2025-07-26 10:44:56 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:44:56 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:44:56 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /profil/1
2025-07-26 10:44:56 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/profil/1", parameters={}
2025-07-26 10:44:56 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ProfilController#getProfil(Long)
2025-07-26 10:44:56 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_1.id is not null 
                then 5 
            when u1_2.id is not null 
                then 1 
            when u1_3.id is not null 
                then 2 
            when u1_4.id is not null 
                then 3 
            when u1_5.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_2.permissions,
            u1_2.role,
            u1_3.biographie,
            u1_3.carte_ordre_path,
            u1_3.cv_path,
            u1_3.diplome_path,
            u1_3.experience,
            u1_3.matricule,
            u1_3.numero_ordre,
            u1_3.service_id,
            u1_3.specialite,
            u1_3.titre,
            u1_4.allergies,
            u1_4.contact_urgence_nom,
            u1_4.contact_urgence_telephone,
            dm1_0.id_dossier,
            dm1_0.antecedents_familiaux,
            dm1_0.antecedents_medicaux,
            dm1_0.date_creation,
            dm1_0.date_modification,
            dm1_0.notes_generales,
            dm1_0.id_patient,
            dm1_0.statut,
            dm1_0.vaccinations,
            u1_4.groupe_sanguin,
            u1_4.num_assurance,
            u1_4.preferences_notification,
            u1_4.profession,
            u1_5.id_hopital,
            u1_5.poste,
            u1_5.id_service,
            u1_3.id,
            u1_4.id 
        from
            utilisateurs u1_0 
        left join
            receptionniste u1_1 
                on u1_0.id=u1_1.id 
        left join
            administrateurs u1_2 
                on u1_0.id=u1_2.id 
        left join
            medecins u1_3 
                on u1_0.id=u1_3.id 
        left join
            patients u1_4 
                on u1_0.id=u1_4.id 
        left join
            personnel_medical u1_5 
                on u1_0.id=u1_5.id 
        left join
            dossiers_medicaux dm1_0 
                on u1_4.id=dm1_0.id_patient 
        where
            u1_0.id=?
2025-07-26 10:44:56 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:44:56 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ProfilUtilisateurDto(id=1, nom=Fall, prenom=Moussa, email=moussa.fall@hopital.sn, type=MEDECIN, stat (truncated)...]
2025-07-26 10:44:56 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:57 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-07-26 10:45:57 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-07-26 10:45:57 [http-nio-8081-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-07-26 10:45:57 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-07-26 10:45:57 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-07-26 10:45:57 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AuthController#login(LoginRequestDto)
2025-07-26 10:45:57 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequestDto(email=admin@example.com, motDePasse=Admin123)]
2025-07-26 10:45:57 [http-nio-8081-exec-9] INFO  c.s.s.s.i.AuthServiceImpl - Tentative de connexion pour email: admin@example.com
2025-07-26 10:45:57 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:57 [http-nio-8081-exec-9] INFO  c.s.s.s.i.AuthServiceImpl - Connexion réussie pour utilisateur: admin@example.com (type: ADMIN)
2025-07-26 10:45:57 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:57 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [AuthResponseDto(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBleGFtcGxlLmNvbSIsInJvbGUiOiJBRE1JTiIsI (truncated)...]
2025-07-26 10:45:57 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:57 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 10:45:57 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 10:45:57 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:45:57 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:45:57 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:45:57 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:45:57 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T10:45:57
2025-07-26 10:45:57 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:45:57 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:45:57 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:57 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:45:57 [http-nio-8081-exec-5] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:45:57 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:57 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:45:57 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:45:57 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:57 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:57 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:57 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:57 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:57 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:45:57 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:45:57 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 10:45:57 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:45:57 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:45:57 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:45:57 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 10:45:57 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:45:57 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:45:57 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:57 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:45:57 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:57 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:45:57 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:57 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:45:57 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:45:57 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:45:57 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:45:57 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:57 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:58 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:58 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:45:58 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:45:58 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 10:45:58 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:45:58 [http-nio-8081-exec-6] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 10:45:58 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:58 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:45:58 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:58 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:58 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:45:58 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:58 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:45:58 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:45:58 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:45:58 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:45:58 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:58 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:45:58 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:58 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T10:45:57
2025-07-26 10:45:58 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:58 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:58 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T10:45:57
2025-07-26 10:45:58 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T10:45:57", parameters={masked}
2025-07-26 10:45:58 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 10:45:58 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 10:45:58 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:58 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:45:58 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:58 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:45:58 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:58 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 10:45:58 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:58 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:45:58 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:45:58 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:45:58 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:45:58 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:58 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:45:58 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:58 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:58 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:45:58 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:58 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:58 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 10:45:58 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 10:45:58 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 10:45:58 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 10:45:58 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:58 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:45:58 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:58 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:58 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:45:58 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:45:58 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:45:58 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 10:45:58 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:45:58 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:58 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:45:58 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:58 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:58 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:58 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:45:58 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:45:58 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:45:58 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:45:58 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:45:58 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:58 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:45:58 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:45:58 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:45:58 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:45:58 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:45:58 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:45:58 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:45:58 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:45:58 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:45:58 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:45:58 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:45:58 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 10:55:45 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:55:45 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 10:55:45 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T10:55:45
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:55:45 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:55:45 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 10:55:45 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:55:45 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:55:45 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:55:45 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:55:45 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:55:45 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:55:45 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:55:45 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:55:45 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:55:45 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T10:55:45
2025-07-26 10:55:45 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:55:45 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:55:45 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T10:55:45
2025-07-26 10:55:45 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T10:55:45", parameters={masked}
2025-07-26 10:55:45 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 10:55:45 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 10:55:45 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:55:45 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:55:45 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:55:45 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:55:45 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:55:45 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:55:45 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:55:45 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:55:45 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:55:45 [http-nio-8081-exec-6] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:55:45 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:55:45 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:55:45 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:55:45 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:55:45 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:55:45 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:55:45 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:55:45 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:55:45 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:55:45 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:55:45 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:45 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:55:45 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:55:46 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:55:46 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:55:46 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:55:46 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:55:46 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:55:46 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:55:46 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:55:46 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:55:46 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:55:46 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:15 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 10:56:15 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:56:15 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:15 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:15 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:56:15 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 10:56:15 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 10:56:15 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:56:15 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:56:15 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:56:15 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T10:56:15
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:15 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 10:56:15 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:15 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:56:15 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:56:15 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:15 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:15 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:15 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:15 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:56:15 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:56:15 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:56:15 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:56:15 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:56:15 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:56:15 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:56:15 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:56:15 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:56:15 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:56:15 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:56:15 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:15 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:56:15 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:15 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:15 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:56:15 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:56:15 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:15 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:15 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:15 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:56:15 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 10:56:15 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:56:15 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 10:56:15 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:56:15 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:15 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:15 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:15 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:15 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:15 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:15 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:15 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:56:15 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:56:15 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:56:15 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:15 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:15 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:15 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:15 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:15 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:15 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:15 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:56:15 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:56:15 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 10:56:15 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 10:56:15 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:15 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:15 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:15 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:15 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:15 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:56:15 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:56:15 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:56:15 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:56:15 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:56:15 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:15 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:15 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:15 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:56:15 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:15 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:15 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:56:15 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:56:15 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:56:15 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:56:15 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:15 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:56:15 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:56:15 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:56:15 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:15 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:15 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:56:15 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:15 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:15 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:15 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:56:15 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:56:15 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:56:16 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:56:16 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:16 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:16 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:16 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:56:16 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:56:16 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:56:16 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:56:16 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:16 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:16 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:16 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T10:56:15
2025-07-26 10:56:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:16 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T10:56:15
2025-07-26 10:56:16 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T10:56:15", parameters={masked}
2025-07-26 10:56:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 10:56:16 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 10:56:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:16 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:16 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:16 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:16 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 10:56:16 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:16 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:56:16 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:56:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:16 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:56:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:16 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:16 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:16 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:16 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 10:56:16 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 10:56:16 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 10:56:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 10:56:16 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:16 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:16 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:16 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:16 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:16 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:56:16 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:16 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:16 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:56:16 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:16 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 10:56:16 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:16 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:56:16 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:16 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:16 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:16 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:56:16 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:56:16 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:56:16 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:56:16 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:56:16 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:16 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:16 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:16 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:56:16 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:16 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:16 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:56:16 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:56:16 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:56:16 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:56:16 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:16 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:16 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T10:56:34
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:56:34 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:56:34 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:56:34 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:56:34 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:56:34 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:56:34 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:56:34 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:56:34 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:56:34 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:56:34 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:56:34 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:56:34 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:56:34 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:56:34 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:56:34 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:34 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:56:34 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:34 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T10:56:34
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T10:56:34
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T10:56:34", parameters={masked}
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:34 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:34 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:34 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:56:34 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:56:34 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:56:34 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:56:49 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs
2025-07-26 10:56:49 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs
2025-07-26 10:56:49 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:56:49 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:56:49 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs
2025-07-26 10:56:49 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs", parameters={}
2025-07-26 10:56:49 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:56:49 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: null, statut: null
2025-07-26 10:56:49 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        order by
            u1_0.date_creation desc
2025-07-26 10:56:49 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:56:49 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:56:49 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=4, nom=Ndoye, prenom=Mariama, dateNaissance=1975-12-12, lieuNaissance=Ziguinchor, (truncated)...]
2025-07-26 10:56:49 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:57:42 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=ADMIN
2025-07-26 10:57:42 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=ADMIN
2025-07-26 10:57:42 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:57:42 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:57:42 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=ADMIN
2025-07-26 10:57:42 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=ADMIN", parameters={masked}
2025-07-26 10:57:42 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:57:42 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: ADMIN, statut: null
2025-07-26 10:57:42 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:57:42 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:57:42 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=3, nom=Diallo, prenom=Abdou, dateNaissance=1980-01-01, lieuNaissance=Touba, sexe= (truncated)...]
2025-07-26 10:57:42 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:57:55 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs
2025-07-26 10:57:55 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs
2025-07-26 10:57:55 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:57:55 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:57:55 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs
2025-07-26 10:57:55 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs", parameters={}
2025-07-26 10:57:55 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:57:55 [http-nio-8081-exec-5] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: null, statut: null
2025-07-26 10:57:55 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        order by
            u1_0.date_creation desc
2025-07-26 10:57:55 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:57:55 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:57:55 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=4, nom=Ndoye, prenom=Mariama, dateNaissance=1975-12-12, lieuNaissance=Ziguinchor, (truncated)...]
2025-07-26 10:57:55 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:57:58 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 10:57:59 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:57:59 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:57:59 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:57:59 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:57:59 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:57:59 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:57:59 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:57:59 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:57:59 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:57:59 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:57:59 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:57:59 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:04 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs
2025-07-26 10:58:04 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs
2025-07-26 10:58:04 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:04 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:04 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs
2025-07-26 10:58:04 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs", parameters={}
2025-07-26 10:58:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:58:04 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: null, statut: null
2025-07-26 10:58:04 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        order by
            u1_0.date_creation desc
2025-07-26 10:58:04 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:58:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=4, nom=Ndoye, prenom=Mariama, dateNaissance=1975-12-12, lieuNaissance=Ziguinchor, (truncated)...]
2025-07-26 10:58:04 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T10:58:08
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:58:08 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:58:08 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:58:08 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:58:08 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:58:08 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:58:08 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:58:08 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:58:08 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:58:08 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:58:08 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T10:58:08
2025-07-26 10:58:08 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:58:08 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:58:08 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:58:08 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:58:08 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:08 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:58:08 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T10:58:08
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T10:58:08", parameters={masked}
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:08 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:08 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:58:08 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:08 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:08 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:08 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:17 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 10:58:17 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 10:58:17 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:58:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:58:17 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:58:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 10:58:17 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 10:58:17 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:17 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:58:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:58:17 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T10:58:17
2025-07-26 10:58:17 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 10:58:17 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:17 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:58:17 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:58:17 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:58:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:17 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:17 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:58:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:58:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:58:17 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:58:17 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:58:17 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:58:17 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:58:17 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:58:17 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:58:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:58:17 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:58:17 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 10:58:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:58:17 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:58:17 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 10:58:17 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:17 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:58:17 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:58:17 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:58:17 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:17 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:17 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:17 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:17 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:58:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:58:18 [http-nio-8081-exec-5] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:18 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:18 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:18 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:58:18 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:58:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:58:18 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:58:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:58:18 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:58:18 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:18 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:58:18 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:18 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:58:18 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:58:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:58:18 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T10:58:17
2025-07-26 10:58:18 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:18 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:18 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:18 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:18 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:58:18 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:58:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:58:18 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:58:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:18 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:18 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T10:58:17
2025-07-26 10:58:18 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T10:58:17", parameters={masked}
2025-07-26 10:58:18 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 10:58:18 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 10:58:18 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:18 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:18 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 10:58:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:18 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 10:58:18 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 10:58:18 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 10:58:18 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:18 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:18 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:18 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:18 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:58:18 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:18 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 10:58:18 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:18 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:18 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:58:18 [http-nio-8081-exec-5] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:18 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:18 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T10:58:22
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:58:22 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:58:22 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:58:22 [http-nio-8081-exec-6] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:22 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:58:22 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:58:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:58:22 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:58:22 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:58:22 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:58:22 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:58:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:58:22 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:58:22 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:58:22 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:58:22 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:58:22 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:58:22 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:58:22 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:22 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:58:22 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:58:22 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:58:22 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:58:22 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:22 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 10:58:22 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:58:22 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:58:22 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:58:22 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:22 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:22 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T10:58:22
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T10:58:22
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T10:58:22", parameters={masked}
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:22 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:22 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:58:22 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:22 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:58:22 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:58:25 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs
2025-07-26 10:58:25 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs
2025-07-26 10:58:25 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:58:25 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:58:25 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs
2025-07-26 10:58:25 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs", parameters={}
2025-07-26 10:58:25 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:58:25 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: null, statut: null
2025-07-26 10:58:25 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        order by
            u1_0.date_creation desc
2025-07-26 10:58:25 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:58:25 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:58:25 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=4, nom=Ndoye, prenom=Mariama, dateNaissance=1975-12-12, lieuNaissance=Ziguinchor, (truncated)...]
2025-07-26 10:58:25 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:10 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs
2025-07-26 10:59:10 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs
2025-07-26 10:59:10 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:10 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:10 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs
2025-07-26 10:59:10 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs", parameters={}
2025-07-26 10:59:10 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:59:10 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: null, statut: null
2025-07-26 10:59:10 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        order by
            u1_0.date_creation desc
2025-07-26 10:59:10 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:59:11 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:11 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=4, nom=Ndoye, prenom=Mariama, dateNaissance=1975-12-12, lieuNaissance=Ziguinchor, (truncated)...]
2025-07-26 10:59:11 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 10:59:12 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T10:59:12
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:59:12 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:59:12 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:59:12 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:59:12 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:59:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:59:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:59:12 [http-nio-8081-exec-6] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:59:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:59:12 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:59:12 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T10:59:12
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:12 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T10:59:12
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T10:59:12", parameters={masked}
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:12 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:12 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 10:59:12 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 10:59:12 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 10:59:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:59:12 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 10:59:12 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:12 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:59:12 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:12 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:12 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:14 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs
2025-07-26 10:59:14 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:14 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:14 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs
2025-07-26 10:59:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs", parameters={}
2025-07-26 10:59:14 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:59:14 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: null, statut: null
2025-07-26 10:59:14 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        order by
            u1_0.date_creation desc
2025-07-26 10:59:14 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:59:14 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:14 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=4, nom=Ndoye, prenom=Mariama, dateNaissance=1975-12-12, lieuNaissance=Ziguinchor, (truncated)...]
2025-07-26 10:59:14 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T10:59:17
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:59:17 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:59:17 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:59:17 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:59:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:17 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:59:17 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:59:17 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:59:17 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-5] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:59:17 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:17 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:59:17 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:59:17 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:17 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 10:59:17 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:59:17 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:59:17 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:59:17 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:59:17 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:59:17 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:59:17 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:59:17 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:59:17 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:17 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:59:17 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 10:59:17 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:59:17 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 10:59:17 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:17 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T10:59:17
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T10:59:17
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T10:59:17", parameters={masked}
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:17 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:17 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 10:59:17 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:17 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:21 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous
2025-07-26 10:59:21 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/en-retard
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 10:59:21 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:59:21 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:59:21 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous
2025-07-26 10:59:21 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 10:59:21 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:21 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:21 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:21 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:21 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:21 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:21 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 10:59:21 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 10:59:21 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:59:21 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 10:59:21 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 10:59:21 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 10:59:21 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 10:59:21 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 10:59:21 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:59:21 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 10:59:21 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous
2025-07-26 10:59:21 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous", parameters={}
2025-07-26 10:59:21 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getAll()
2025-07-26 10:59:21 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:21 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 10:59:21 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:21 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0
2025-07-26 10:59:21 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:21 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:21 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:21 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 10:59:21 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:21 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:21 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:21 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 10:59:21 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 10:59:21 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 10:59:21 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 10:59:21 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:59:21 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 10:59:21 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:21 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 10:59:21 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 10:59:21 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 10:59:21 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/en-retard
2025-07-26 10:59:21 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 10:59:21 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 10:59:21 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/en-retard
2025-07-26 10:59:21 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/en-retard", parameters={}
2025-07-26 10:59:21 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getOverdue()
2025-07-26 10:59:21 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure<? 
        and rv1_0.statut='PROGRAMME'
2025-07-26 10:59:21 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 10:59:21 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 10:59:21 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:02:12 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:02:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:02:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:02:12 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/en-retard
2025-07-26 11:02:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:02:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous
2025-07-26 11:02:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:02:12 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:02:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/en-retard
2025-07-26 11:02:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:02:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous
2025-07-26 11:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:02:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:02:12 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:02:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:02:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:02:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:02:12 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:02:12 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:02:12 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:02:12 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:02:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:02:12 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:02:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:02:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:02:12 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:02:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:02:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:02:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:02:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:02:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:02:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous
2025-07-26 11:02:12 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous", parameters={}
2025-07-26 11:02:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getAll()
2025-07-26 11:02:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:02:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0
2025-07-26 11:02:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:02:12 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:02:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:02:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:02:12 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:02:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:02:12 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:02:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:02:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:02:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/en-retard
2025-07-26 11:02:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/en-retard", parameters={}
2025-07-26 11:02:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:02:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getOverdue()
2025-07-26 11:02:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:02:12 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:02:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure<? 
        and rv1_0.statut='PROGRAMME'
2025-07-26 11:02:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:02:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:02:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:03:29 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:03:29 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/en-retard
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:03:29 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:03:29 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous
2025-07-26 11:03:29 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:03:29 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:29 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:03:29 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:29 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:29 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/en-retard
2025-07-26 11:03:29 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:03:29 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:03:29 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:03:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:03:29 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:03:29 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous
2025-07-26 11:03:29 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous", parameters={}
2025-07-26 11:03:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getAll()
2025-07-26 11:03:29 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:03:29 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:29 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0
2025-07-26 11:03:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:29 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:29 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:29 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:29 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:29 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:29 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/en-retard
2025-07-26 11:03:29 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/en-retard", parameters={}
2025-07-26 11:03:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getOverdue()
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:03:29 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure<? 
        and rv1_0.statut='PROGRAMME'
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:03:29 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:03:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:29 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:03:29 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:03:29 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:03:29 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:29 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:03:29 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:03:29 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:29 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:29 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:29 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:03:29 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:03:29 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:03:29 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:03:51
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:03:51 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:03:51 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:03:51 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:03:51 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:03:51 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:03:51 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:03:51 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:03:51
2025-07-26 11:03:51 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:03:51 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:03:51 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:51 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:03:51
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:03:51", parameters={masked}
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:03:51 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:51 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:51 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:51 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:03:51 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:03:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:51 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:51 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:54 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous
2025-07-26 11:03:54 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/en-retard
2025-07-26 11:03:54 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:03:54 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:03:54 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:03:54 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:03:54 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous
2025-07-26 11:03:54 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:54 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:55 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:55 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:55 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:55 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:55 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:55 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:55 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:55 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:55 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/en-retard
2025-07-26 11:03:55 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:03:55 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:03:55 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:03:55 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous
2025-07-26 11:03:55 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous", parameters={}
2025-07-26 11:03:55 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getAll()
2025-07-26 11:03:55 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:03:55 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:03:55 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:03:55 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:03:55 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:03:55 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0
2025-07-26 11:03:55 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:03:55 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:03:55 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:03:55 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:03:55 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:03:55 [http-nio-8081-exec-6] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:03:55 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:03:55 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:03:55 [http-nio-8081-exec-5] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:03:55 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:55 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:03:55 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:55 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:55 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:55 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:03:55 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:55 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:03:55 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:03:55 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:03:55 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:55 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:03:55 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:03:55 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:55 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:55 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:03:55 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:55 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:55 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:03:55 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:03:55 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:03:55 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:03:55 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/en-retard
2025-07-26 11:03:55 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/en-retard", parameters={}
2025-07-26 11:03:55 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getOverdue()
2025-07-26 11:03:55 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure<? 
        and rv1_0.statut='PROGRAMME'
2025-07-26 11:03:55 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:03:55 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:03:55 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:30 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:04:30 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:30 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:04:30 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:30 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:04:30 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:04:30 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:04:30 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:04:30 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:04:30 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:04:30 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:30 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:04:30
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:04:30 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:30 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:30 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:30 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:04:30 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:04:30 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:04:30 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:04:30 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:04:30 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:30 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:04:30 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:04:30 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:30 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:04:31 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:04:31 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:04:31 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:04:31 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:04:31 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:04:31 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:04:31 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:31 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:04:31 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:04:31 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:04:31 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:04:31 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:04:31 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:31 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:04:31 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:31 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:04:31 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:31 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:04:31 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:04:31 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:04:31 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:04:31 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:04:31 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:04:31 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:04:31 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:04:31 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:31 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:04:31 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:31 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:04:30
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:04:30
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:04:30", parameters={masked}
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:31 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:04:31 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:31 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:31 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:34 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:04:34 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:34 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:34 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:04:34 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:04:34 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:04:34 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:04:34 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:04:34 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:34 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:04:34 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:04:40 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:04:40
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:04:40 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-5] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:04:40 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:04:40 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:04:40 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:04:40 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:04:40 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:04:40 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:04:40 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:04:40 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:04:40 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:04:40
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:04:40 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:04:40 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:04:40 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:04:40 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:04:40 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:40 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:04:40
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:04:40", parameters={masked}
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:40 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:04:40 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:04:40 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:04:40 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:04:40 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:40 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:40 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:04:40 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:40 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:40 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:40 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:45 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:04:45 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:04:45 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:04:45 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:04:45 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:45 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:45 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:45 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:45 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:04:45 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:04:45 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:04:45 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:04:45 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:04:45 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:04:45 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:04:45 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:04:45 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:04:45 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:45 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:45 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:45 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:45 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:04:45 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:04:50 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:04:50 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:04:50 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:04:50 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:04:50
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:50 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:04:50 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:50 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:04:50 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:50 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:04:50 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:50 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:04:50 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:04:50 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:04:50 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:04:50 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:04:50 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:04:50 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:04:50 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:50 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:50 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:50 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:50 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:51 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:04:51 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:04:51 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:04:51 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:51 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:51 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:04:51 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:04:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:04:51 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:04:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:04:51 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:04:51 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:04:51 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:04:51 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:04:51 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:04:51 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:04:51 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:51 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:04:51 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:04:50
2025-07-26 11:04:51 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:04:51 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:51 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:04:51 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:04:51 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:04:51 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:04:51 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:04:50
2025-07-26 11:04:51 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:04:50", parameters={masked}
2025-07-26 11:04:51 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:51 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:51 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:04:51 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:51 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:51 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:04:51 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:51 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:04:51 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:00 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:05:01 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:05:07 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:05:07 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:05:07
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:05:07 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:05:07 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:05:07 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:05:07 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:05:07 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:05:07 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:05:07 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:05:07 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:05:07 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:07 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:05:07 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:05:07
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:07 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:05:07
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:05:07", parameters={masked}
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:07 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:05:07 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:07 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:07 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:05:07 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:07 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:07 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:11 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:05:11 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:11 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:11 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:05:11 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:05:11 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:05:11 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:05:11 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:11 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:05:11 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:05:20 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:05:20 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:05:20
2025-07-26 11:05:20 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:20 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:05:20 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:05:20 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:05:20 [http-nio-8081-exec-6] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:05:20 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:05:20 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:05:20 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:05:20 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:05:20 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:05:20 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:05:20 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:05:20 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:05:20 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:05:20 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:05:20 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:05:20 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:05:20 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:20 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:05:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:05:20
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:20 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:05:20 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:05:20 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:05:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:05:20
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:05:20", parameters={masked}
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:20 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:20 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:20 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:05:20 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:20 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:05:20 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:06:59 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:06:59 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:06:59 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:06:59 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:06:59 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:06:59 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:06:59 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:06:59 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:06:59 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:06:59 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:06:59 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:02 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:02 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:07:02 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:07:02 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:07:02
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:07:02 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:07:02 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:07:02 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:07:02 [http-nio-8081-exec-6] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:07:02 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:02 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:07:02 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:07:02 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:02 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:02 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:07:02 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:07:02 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:07:02
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:07:02 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:07:02
2025-07-26 11:07:02 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:07:02", parameters={masked}
2025-07-26 11:07:02 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:07:02 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:02 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:07:02 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:07:02 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:07:02 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:07:02 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:07:02 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:07:02 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:02 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:02 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:02 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:07:02 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:07:02 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:07:02 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:07:02 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:07:02 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:02 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:02 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:02 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:07:06 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:07 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:07:07 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:07:07 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:07:07 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:07:07
2025-07-26 11:07:07 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:07:07 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:07:07 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:07 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:07:07 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:07:07 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:07:07 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:07 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:07 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:07 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:07 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:07 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:07 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:07:07 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:07:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:07:07 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:07:07 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:07:07 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:07:07 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:07:07 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:07:07 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:07:07 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:07:07 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:07:07 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:07:07 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:07:07 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:07:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:07 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:07:07 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:07:07 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:07 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:07:07 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:07 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:07 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:07 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:07:07 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:07 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:07 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:07 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:07 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:07 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:07 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:07 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:07 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:07 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:07:07 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:07:07 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:07:07 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:07 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:07 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:07 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:07 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:07:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:07:07 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:07:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:07 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:07 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:07:07 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:07 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:07:07 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:07:07 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:07 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:07 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:07 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:07:07 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:07:07 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:07:07 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:07:07 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:07:07 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:07 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:07:07 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:07 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:08 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:08 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:07:08 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:07:08 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:07:08 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:07:08 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:07:08 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:08 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:08 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:08 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:08 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:08 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:08 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:07:08 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:07:08 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:07:08 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:07:08 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:08 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:08 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:08 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:08 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:08 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:08 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:07:08 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:07:08 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:07:08 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:08 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:08 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:08 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:07:07
2025-07-26 11:07:08 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:08 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:08 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:07:07
2025-07-26 11:07:08 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:07:07", parameters={masked}
2025-07-26 11:07:08 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:07:08 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:07:08 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:07:08 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:08 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:08 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:08 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:08 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:08 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:08 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:07:08 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:07:08 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:07:08 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:07:08 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:08 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:08 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:08 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:08 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:08 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:07:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:07:08 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:07:08 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:07:08 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:08 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:08 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:08 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:07:08 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:08 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:08 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:07:08 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:07:08 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:07:08 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:07:08 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:07:08 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:08 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:08 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:07:08 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:07:08 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:07:08 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:07:08 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:07:08 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:07:08 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:07:08 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:07:08 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:07:08 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:07:08 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:12:04 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:04 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:12:04 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:12:04 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:12:04
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:04 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:12:04 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:12:04 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:12:04 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-6] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:12:04 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:12:04 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:12:04 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:12:04 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:12:04 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:12:04 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:12:04 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:12:04 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:12:04 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:12:04 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:04 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:12:04 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:12:04
2025-07-26 11:12:04 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:04 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:12:04
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:12:04", parameters={masked}
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:12:04 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:04 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:04 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:12:04 [http-nio-8081-exec-6] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:04 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:04 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:04 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:04 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:12:04 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:12:04 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:12:04 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:04 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:04 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:06 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:12:06 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:06 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:06 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:12:06 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:12:06 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:12:06 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:12:06 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:06 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:06 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:12:35 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:12:35 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:12:35 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:12:35 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:12:35 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:12:35
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:12:35 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:12:35 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:12:35 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:12:35 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:12:35 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:35 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:12:36 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:12:36 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:12:36 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:12:36 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:12:36 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:12:36 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:12:36 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:12:36 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:12:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:36 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:36 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:12:36 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:12:36 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:12:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:12:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:12:36 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:12:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:36 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:12:36 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:12:36 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:12:36 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:12:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:12:36 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:36 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:12:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:36 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:36 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:12:35
2025-07-26 11:12:36 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:36 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:36 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:36 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:36 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:12:35
2025-07-26 11:12:36 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:12:35", parameters={masked}
2025-07-26 11:12:36 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:12:36 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:12:36 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:36 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:36 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:36 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:36 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:12:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:12:36 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:12:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:36 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:36 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:36 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:36 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:12:36 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:12:36 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:12:36 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:12:36 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:36 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:36 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:36 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:12:36 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:36 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:12:36 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:13:50 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:13:50 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:50 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:13:50 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:13:50
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:50 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:13:50 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:13:50 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:13:50 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:13:50 [http-nio-8081-exec-6] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:13:50 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:13:50 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:13:50 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:13:50 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:13:50 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:13:50 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:13:50 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:13:50 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:13:50 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:13:50 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:13:50 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:13:50 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:13:50 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:13:50 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:13:50 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:50 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:13:50
2025-07-26 11:13:50 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:13:50 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:13:50 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:13:50 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:50 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:13:50
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:13:50", parameters={masked}
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:50 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:50 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:50 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:50 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:13:50 [http-nio-8081-exec-5] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:50 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:50 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:13:54
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:13:54 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:13:54 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:13:54 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:13:54 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:13:54 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:13:54 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:13:54
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:13:54 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:13:54 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:13:54 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:13:54 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:13:54 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:54 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:13:54 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:13:54 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:13:54 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:13:54 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:13:54 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:13:54 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:13:54 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:13:54 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:13:54 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:54 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:13:54 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:13:54
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:13:54", parameters={masked}
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:13:54 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:13:54 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:54 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:54 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:54 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:13:54 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:14:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:14:12 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:14:12 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:14:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:14:12
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:14:12 [http-nio-8081-exec-2] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:14:12 [http-nio-8081-exec-5] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:14:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:14:12 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:14:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:14:12 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:14:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:14:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:14:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:12 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:14:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:14:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:14:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:14:12 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:12 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:14:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:14:12 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:14:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:14:12 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:14:12 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:14:12 [http-nio-8081-exec-6] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:14:12 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:12 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:14:12
2025-07-26 11:14:12 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:12 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:14:12
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:14:12", parameters={masked}
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:12 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:14:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:14:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:12 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:13 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:14:13 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:14:13 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:14:13 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:14:13 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:13 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:14:13 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:13 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:14:13 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:14:13 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:13 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:13 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:13 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:13 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:14:13 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:13 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:13 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:14:13 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:14:13 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:14:13 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:14:13 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:14:13 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:13 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:13 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:13 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:14:13 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:13 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:13 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:14:13 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:14:13 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:14:13 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:14:13 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:13 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:13 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:14:19
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:14:19 [http-nio-8081-exec-10] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:14:19 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:14:19 [http-nio-8081-exec-5] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:14:19 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:14:19 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:14:19 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:14:19 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:14:19 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:14:19 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:14:19 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:14:19 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:14:19 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:14:19 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:14:19
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:19 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:14:19
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:14:19", parameters={masked}
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:19 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:14:19 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:19 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:14:19 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:19 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:19 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:14:36
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:14:36 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:14:36 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:14:36 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:14:36 [http-nio-8081-exec-4] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:14:36 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:14:36 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:14:36 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:14:36 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:14:36 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:14:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:14:36 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:14:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:36 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:36 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:14:36
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:14:36
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:14:36", parameters={masked}
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:14:36 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:14:36 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:36 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:14:36 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:14:36 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:36 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:36 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:39 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:14:39 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:39 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:39 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:14:39 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:14:39 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:14:39 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:14:39 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:39 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:14:39 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:14:48 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /profil/3
2025-07-26 11:14:48 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /profil/3
2025-07-26 11:14:48 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:14:48 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:14:48 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /profil/3
2025-07-26 11:14:48 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/profil/3", parameters={}
2025-07-26 11:14:48 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ProfilController#getProfil(Long)
2025-07-26 11:14:48 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_1.id is not null 
                then 5 
            when u1_2.id is not null 
                then 1 
            when u1_3.id is not null 
                then 2 
            when u1_4.id is not null 
                then 3 
            when u1_5.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_2.permissions,
            u1_2.role,
            u1_3.biographie,
            u1_3.carte_ordre_path,
            u1_3.cv_path,
            u1_3.diplome_path,
            u1_3.experience,
            u1_3.matricule,
            u1_3.numero_ordre,
            u1_3.service_id,
            u1_3.specialite,
            u1_3.titre,
            u1_4.allergies,
            u1_4.contact_urgence_nom,
            u1_4.contact_urgence_telephone,
            dm1_0.id_dossier,
            dm1_0.antecedents_familiaux,
            dm1_0.antecedents_medicaux,
            dm1_0.date_creation,
            dm1_0.date_modification,
            dm1_0.notes_generales,
            dm1_0.id_patient,
            dm1_0.statut,
            dm1_0.vaccinations,
            u1_4.groupe_sanguin,
            u1_4.num_assurance,
            u1_4.preferences_notification,
            u1_4.profession,
            u1_5.id_hopital,
            u1_5.poste,
            u1_5.id_service,
            u1_3.id,
            u1_4.id 
        from
            utilisateurs u1_0 
        left join
            receptionniste u1_1 
                on u1_0.id=u1_1.id 
        left join
            administrateurs u1_2 
                on u1_0.id=u1_2.id 
        left join
            medecins u1_3 
                on u1_0.id=u1_3.id 
        left join
            patients u1_4 
                on u1_0.id=u1_4.id 
        left join
            personnel_medical u1_5 
                on u1_0.id=u1_5.id 
        left join
            dossiers_medicaux dm1_0 
                on u1_4.id=dm1_0.id_patient 
        where
            u1_0.id=?
2025-07-26 11:14:48 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.sante.senegal.exceptions.GlobalExceptionHandler#handleGeneralException(Exception)
2025-07-26 11:14:48 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:14:48 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ErrorResponse(code=INTERNAL_ERROR, message=Une erreur interne s'est produite, timestamp=2025-07-26T1 (truncated)...]
2025-07-26 11:14:48 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.util.NoSuchElementException: No value present]
2025-07-26 11:14:48 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-26 11:15:00 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:15:00 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/aujourd-hui
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/urgents
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /planning/creneaux-disponibles/date?date=2025-07-26T11:15:00
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/medecins/demandes-validation
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /statistiques/medicaments/top?limit=5
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=RECEPTIONNISTE
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=RECEPTIONNISTE", parameters={masked}
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:15:00 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: RECEPTIONNISTE, statut: null
2025-07-26 11:15:00 [http-nio-8081-exec-9] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:15:00 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponibles(Long, Long, Long, LocalDateTime, LocalDateTime)
2025-07-26 11:15:00 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:15:00 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date between ? and ? 
        and p1_0.reserve=false 
    order by
        p1_0.date,
        p1_0.heure_debut
2025-07-26 11:15:00 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:15:00 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:00 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:15:00 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:15:00 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /planning/creneaux-disponibles/date?date=2025-07-26T11:15:00
2025-07-26 11:15:00 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/urgents
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:15:00 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:15:00 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:15:00 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:15:00 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:15:00 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:15:00 [http-nio-8081-exec-1] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:15:00 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:15:00 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:00 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /statistiques/medicaments/top?limit=5
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/periode?dateDebut=2025-01-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getBetweenDates(LocalDateTime, LocalDateTime)
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /statistiques/medicaments/top?limit=5
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/statistiques/medicaments/top?limit=5", parameters={masked}
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.StatistiquesController#getTopMedicamentsPrescrits(int)
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /planning/creneaux-disponibles/date?date=2025-07-26T11:15:00
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        mp1_0.nom_medicament,
        count(mp1_0.id_medicament_prescrit) 
    from
        medicaments_prescrits mp1_0 
    group by
        mp1_0.nom_medicament 
    order by
        count(mp1_0.id_medicament_prescrit) desc 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59
2025-07-26 11:15:00 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/urgents
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:15:00 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/urgents", parameters={}
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:15:00 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getUrgents()
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/consultations/medecin/0?dateDebut=2025-07-01T00:00:00&dateFin=2025-07-31T23:59:59", parameters={masked}
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/planning/creneaux-disponibles/date?date=2025-07-26T11:15:00", parameters={masked}
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.PlanningController#getCreneauxDisponiblesParDate(Long, Long, Long, LocalDateTime)
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:00 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.niveau_urgence=?
2025-07-26 11:15:00 [http-nio-8081-exec-8] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ConsultationController#getConsultationsMedecin(Long, LocalDateTime, LocalDateTime)
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:00 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:00 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id_planning,
        p1_0.date,
        p1_0.heure_debut,
        p1_0.heure_fin,
        p1_0.id_hopital,
        p1_0.id_medecin,
        p1_0.id_rendez_vous,
        p1_0.reserve,
        p1_0.id_service 
    from
        planning p1_0 
    where
        (
            ? is null 
            or p1_0.id_medecin=?
        ) 
        and (
            ? is null 
            or p1_0.id_service=?
        ) 
        and (
            ? is null 
            or p1_0.id_hopital=?
        ) 
        and p1_0.date=? 
        and p1_0.reserve=false 
    order by
        p1_0.heure_debut
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/medecins/demandes-validation
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:15:00 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id_consultation,
        c1_0.date_creation,
        c1_0.date_heure,
        c1_0.date_modification,
        c1_0.diagnostic,
        c1_0.id_dossier,
        c1_0.duree_reelle,
        c1_0.observations,
        c1_0.recommandations,
        c1_0.id_rdv,
        c1_0.satisfaction,
        c1_0.statut,
        c1_0.symptomes 
    from
        consultations c1_0 
    left join
        rendez_vous rv1_0 
            on rv1_0.id_rdv=c1_0.id_rdv 
    left join
        medecins m1_0 
            on m1_0.id=rv1_0.id_medecin 
    where
        m1_0.id=? 
        and c1_0.date_heure between ? and ?
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/medecins/demandes-validation
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/medecins/demandes-validation", parameters={}
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerDemandesValidation()
2025-07-26 11:15:00 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des demandes de validation
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_1.statut=?
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:00 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/aujourd-hui
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/aujourd-hui
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/aujourd-hui", parameters={}
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getToday()
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure between ? and ?
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:00 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:11 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous
2025-07-26 11:15:11 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /hopitaux
2025-07-26 11:15:11 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /services
2025-07-26 11:15:11 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=MEDECIN
2025-07-26 11:15:11 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/utilisateurs?type=PATIENT
2025-07-26 11:15:11 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /rendez-vous/en-retard
2025-07-26 11:15:11 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous/en-retard
2025-07-26 11:15:11 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:15:11 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:11 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:11 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:11 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:11 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous/en-retard
2025-07-26 11:15:11 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous/en-retard", parameters={}
2025-07-26 11:15:11 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getOverdue()
2025-07-26 11:15:11 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0 
    where
        rv1_0.date_heure<? 
        and rv1_0.statut='PROGRAMME'
2025-07-26 11:15:11 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:11 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:11 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:11 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=PATIENT
2025-07-26 11:15:11 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=PATIENT", parameters={masked}
2025-07-26 11:15:11 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:15:11 [http-nio-8081-exec-3] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: PATIENT, statut: null
2025-07-26 11:15:11 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:15:11 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /hopitaux
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:11 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:11 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/utilisateurs?type=MEDECIN
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/admin/utilisateurs?type=MEDECIN", parameters={masked}
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.AdministrateurController#listerUtilisateurs(TypeUtilisateur, StatutUtilisateur)
2025-07-26 11:15:11 [http-nio-8081-exec-7] INFO  c.s.s.c.AdministrateurController - Demande de liste des utilisateurs - type: MEDECIN, statut: null
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.type=? 
        order by
            u1_0.date_creation desc
2025-07-26 11:15:11 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /hopitaux
2025-07-26 11:15:11 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/hopitaux", parameters={}
2025-07-26 11:15:11 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.HopitalController#getAllHopitaux()
2025-07-26 11:15:11 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0
2025-07-26 11:15:11 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=1, nom=Fall, prenom=Moussa, dateNaissance=1980-02-20, lieuNaissance=null, sexe=MA (truncated)...]
2025-07-26 11:15:11 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[HopitalDto(idHopital=1, nom=Hôpital National de Dakar, adresse=Av. Cheikh Anta Diop, ville=Dakar, r (truncated)...]
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:11 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /services
2025-07-26 11:15:11 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rendez-vous
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:11 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        case 
            when u1_5.id is not null 
                then 5 
            when u1_1.id is not null 
                then 1 
            when u1_2.id is not null 
                then 2 
            when u1_3.id is not null 
                then 3 
            when u1_4.id is not null 
                then 4 
            when u1_0.id is not null 
                then 0 
            end,
            u1_0.adresse,
            u1_0.date_creation,
            u1_0.date_derniere_connexion,
            u1_0.date_modification,
            u1_0.date_naissance,
            u1_0.email,
            u1_0.lieu_naissance,
            u1_0.mot_de_passe,
            u1_0.nom,
            u1_0.prenom,
            u1_0.sexe,
            u1_0.statut,
            u1_0.telephone,
            u1_0.type,
            u1_1.permissions,
            u1_1.role,
            u1_2.biographie,
            u1_2.carte_ordre_path,
            u1_2.cv_path,
            u1_2.diplome_path,
            u1_2.id,
            u1_2.experience,
            u1_2.matricule,
            u1_2.numero_ordre,
            u1_2.service_id,
            u1_2.specialite,
            u1_2.titre,
            u1_3.allergies,
            u1_3.contact_urgence_nom,
            u1_3.contact_urgence_telephone,
            u1_3.id,
            u1_3.groupe_sanguin,
            u1_3.num_assurance,
            u1_3.preferences_notification,
            u1_3.profession,
            u1_4.id_hopital,
            u1_4.poste,
            u1_4.id_service 
        from
            utilisateurs u1_0 
        left join
            administrateurs u1_1 
                on u1_0.id=u1_1.id 
        left join
            medecins u1_2 
                on u1_0.id=u1_2.id 
        left join
            patients u1_3 
                on u1_0.id=u1_3.id 
        left join
            personnel_medical u1_4 
                on u1_0.id=u1_4.id 
        left join
            receptionniste u1_5 
                on u1_0.id=u1_5.id 
        where
            u1_0.email=?
2025-07-26 11:15:11 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        utilisateurs 
    set
        adresse=?,
        date_derniere_connexion=?,
        date_modification=?,
        date_naissance=?,
        email=?,
        lieu_naissance=?,
        mot_de_passe=?,
        nom=?,
        prenom=?,
        sexe=?,
        statut=?,
        telephone=?,
        type=? 
    where
        id=?
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /services
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/services", parameters={}
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.ServiceController#getAllServices()
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.id_service,
        s1_0.capacite_patients_jour,
        s1_0.chef_service,
        s1_0.description,
        s1_0.email,
        s1_0.emplacement,
        s1_0.id_hopital,
        s1_0.nom,
        s1_0.statut,
        s1_0.telephone 
    from
        services s1_0
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_1.adresse,
        m1_1.date_creation,
        m1_1.date_derniere_connexion,
        m1_1.date_modification,
        m1_1.date_naissance,
        m1_1.email,
        m1_1.lieu_naissance,
        m1_1.mot_de_passe,
        m1_1.nom,
        m1_1.prenom,
        m1_1.sexe,
        m1_1.statut,
        m1_1.telephone,
        m1_1.type,
        m1_0.biographie,
        m1_0.carte_ordre_path,
        m1_0.cv_path,
        m1_0.diplome_path,
        m1_0.experience,
        m1_0.matricule,
        m1_0.numero_ordre,
        m1_0.service_id,
        m1_0.specialite,
        m1_0.titre 
    from
        medecins m1_0 
    join
        utilisateurs m1_1 
            on m1_0.id=m1_1.id 
    where
        m1_0.id=?
2025-07-26 11:15:11 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        dm1_0.id_dossier,
        dm1_0.antecedents_familiaux,
        dm1_0.antecedents_medicaux,
        dm1_0.date_creation,
        dm1_0.date_modification,
        dm1_0.notes_generales,
        dm1_0.id_patient,
        dm1_0.statut,
        dm1_0.vaccinations 
    from
        dossiers_medicaux dm1_0 
    where
        dm1_0.id_patient=?
2025-07-26 11:15:11 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rendez-vous
2025-07-26 11:15:11 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/v1/rendez-vous", parameters={}
2025-07-26 11:15:11 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sante.senegal.controllers.RendezVousController#getAll()
2025-07-26 11:15:11 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_rdv,
        rv1_0.date_creation,
        rv1_0.date_heure,
        rv1_0.date_modification,
        rv1_0.duree_prevue,
        rv1_0.id_hopital,
        rv1_0.id_medecin,
        rv1_0.mode_prise_rdv,
        rv1_0.motif,
        rv1_0.niveau_urgence,
        rv1_0.id_patient,
        rv1_0.id_service,
        rv1_0.statut,
        rv1_0.type_consultation 
    from
        rendez_vous rv1_0
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:15:11 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:11 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id_hopital,
        h1_0.adresse,
        h1_0.capacite_lits,
        h1_0.coordonnees_gps,
        h1_0.email,
        h1_0.heures_ouverture,
        h1_0.nom,
        h1_0.region,
        h1_0.site_web,
        h1_0.statut,
        h1_0.telephone,
        h1_0.type_etablissement,
        h1_0.ville 
    from
        hopitaux h1_0 
    where
        h1_0.id_hopital=?
2025-07-26 11:15:11 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-07-26 11:15:11 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UtilisateurDto(id=2, nom=Sow, prenom=Fatou, dateNaissance=1990-06-20, lieuNaissance=Saint-Louis, se (truncated)...]
2025-07-26 11:15:11 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:11 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[ServiceDto(idService=1, idHopital=1, nomHopital=Hôpital National de Dakar, nom=Service de Dermatolo (truncated)...]
2025-07-26 11:15:11 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-26 11:20:10 [SpringApplicationShutdownHook] DEBUG o.s.b.a.ApplicationAvailabilityBean - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2025-07-26 11:20:10 [SpringApplicationShutdownHook] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68d279ec, started on Sat Jul 26 10:40:26 GMT 2025
2025-07-26 11:20:10 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-26 11:20:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-26 11:20:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
